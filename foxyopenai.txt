import discord
from discord.ext import commands
import openai # type: ignore

# Bot token and channel/user IDs
TOKEN = 'TOKEN'  # Replace with your actual bot token
CHANNEL_ID = 1275757082100109374, 861944839553286157, 1244192814640660551
USER_ID = 886285955416338442
import discord
from discord.ext import commands

import discord
from discord.ext import commands

intents = discord.Intents.default()
intents.message_content = True
intents.guilds = True

bot = commands.Bot(command_prefix=lambda bot, message: message.content.lower().startswith('hey foxy, '), intents=intents)

@bot.event
async def on_ready():
    print(f'Logged in as {bot.user.name}')

@bot.command(name='ping')
async def ping(ctx):
    await ctx.send('im right here asshat')

@bot.command(name='motto')
async def motto(ctx): 
    await ctx.send('im either gonna kill myself or die trying')

@bot.command(name='do')
async def do(ctx):
    await ctx.send('absolutely not.')

@bot.command(name='fuck')
async def fuck(ctx):
    await ctx.send('Im gonna tickle your toes lil bro')

@bot.command(name='hi')
async def hi(ctx):
    await ctx.send('fuck you talija')

@bot.command(name='status')
async def status(ctx):
    await ctx.send('online and running until you put me up for adoption')

@bot.command(name='thoughts')
async def thoughts(ctx):
    await ctx.send('shes a whore anyways')

intents = discord.Intents.default()
intents.message_content = True
bot = commands.Bot(command_prefix="!", intents=intents)

openai.api_key = 'API_TOKEN'

@bot.event
async def on_message(message):
    if message.author == bot.user:
        return

    # Command list
    if message.content.startswith("!cmndlist"):
        command_list = """
**Foxy's Commands:**
Prefix: `hey foxy, `
- `ping`: im right here asshat
- `motto`: im either gonna kill myself or die trying
- `do you like [name]`: absolutely not.
- `fuck you`: Im gonna tickle your toes lil bro
- `status`: online and running until you put me up for adoption
- `thoughts`: shes a whore anyways
- If you want a custom command, ask me and i can maybe make it happen!

**Turbo's Commands:**
Prefix: `hey turbo, `
- Turbo is actually just Foxy but i gave him a dif name! Now, Turbo is actually gpt-3.5-turbo, hence the name. If your'e not already aware, Turbo is simply an AI that is built in! to talk to him, prefix your messages with "hey turbo, " and he will respond!.
"""
        await message.channel.send(command_list)

    await bot.process_commands(message)


    if message.webhook_id:
        return  # Ignore messages sent by webhooks
    
    if message.author.bot:
        return  # Ignore messages from other bots
    
    # Your OpenAI response logic here

    await bot.process_commands(message)

  
    if message.content.startswith("hey turbo, "):
        query = message.content[len("hey turbo, "):]  # Extract the query after the custom prefix
        response = openai.ChatCompletion.create(
            model="gpt-4o-mini",
            temperature=1.5,
            messages=[
                {"role": "system", "content": "You are a helpful assistant."},
                {"role": "user", "content": query}
            ],
            max_tokens=450
        )
        answer = response['choices'][0]['message']['content'].strip()
        await message.channel.send(f"{answer}")
    # Process other commands normally
        await bot.process_commands(message)

def save_memory(user_input, bot_response):
    with open('memory.txt', 'a') as file:
        file.write(f"User: {user_input}\nBot: {bot_response}\n")

def load_memory():
    try:
        with open('memory.txt', 'r') as file:
            return file.readlines()
    except FileNotFoundError:
        return []

user_input = "Hello, how are you?"
bot_response = "<Insert the response from your bot here>"
save_memory(user_input, bot_response)


# Start the bot
bot.run('TOKEN')