import discord
import requests
import asyncio
from discord.ext import tasks, commands
import openai # type: ignore
import time

# Bot token and channel/user IDs
TOKEN = 'REDACTED'
CHANNEL_ID = 1275757082100109374 
USER_ID = 886285955416338442
intents = discord.Intents.default()
intents.message_content = True
intents.guilds = True
bot = commands.Bot(command_prefix="hey foxy, ", intents=intents)

@bot.event
async def on_ready():
    print(f'Logged in as {bot.user.name}')

@bot.event
async def on_ready():
    print(f'Logged in as {bot.user.name}')
    await send_to_channel(CHANNEL_ID, "Foxy is online!")


@bot.command(name='ping')
async def ping(ctx):
    await ctx.send('im right here asshat')

@bot.command(name='motto')
async def motto(ctx): 
    await ctx.send('im either gonna kill myself or die trying')

@bot.command(name='do')
async def do(ctx):
    await ctx.send('absolutely not.')

@bot.command(name='fuck')
async def fuck(ctx):
    await ctx.send('Im gonna tickle your toes lil bro')

@bot.command(name='hi')
async def hi(ctx):
    await ctx.send('fuck you talija')

@bot.command(name='status')
async def status(ctx):
    await ctx.send('online and running until you put me up for adoption')

@bot.command(name='thoughts')
async def thoughts(ctx):
    await ctx.send('shes a whore anyways')


channel = bot.get_channel(CHANNEL_ID)
async def send_to_channel(channel_id, message):
    channel = bot.get_channel(channel_id)
    if channel:
        await channel.send(message)
@bot.event
async def on_ready():
    await send_to_channel(1275757082100109374, "Bot is now online!")
last_message_id = None




    
# Set your OpenAI API key here
openai.api_key = 'REDACTED'

# Respond using a channel-specific webhook
@bot.command(name='use_webhook')
async def use_webhook(channel, *, message):
    # Get existing webhooks or create one
    webhooks = await channel.webhooks()
    webhook = None
    for wh in webhooks:
        if wh.user == bot.user:
            webhook = wh
            break
    if webhook is None:
        webhook = await channel.create_webhook(name="Foxy Webhook")
    await webhook.send(content=message, username="Turbo (Foxy's goody two shoes brother)", avatar_url=str('https://cdn.discordapp.com/attachments/1275266563687317599/1275972157012443326/images.jpeg?ex=66c7d52c&is=66c683ac&hm=d28230ba4e5f55c8dbc39740b04a0f7b769c1ff86bb73d5308138ab7bbf3be6d&'))

# Split the message if it exceeds 2000 characters
    while len(message) > 2000:
        await webhook.send(content=message[:2000], username="Turbo (Foxy's goody two shoes brother)", avatar_url=str(bot.user.avatar_url))
        message = message[2000:]


@bot.event
async def on_message(message):
    if message.author == bot.user:
        return

    if message.content.startswith("hey turbo, "):
        query = message.content[len("hey turbo, "):]
        response = openai.ChatCompletion.create(
            model="gpt-4o-mini",
            temperature=2,
            messages=[
                {"role": "system", "content": "You are a helpful assistant."},
                {"role": "user", "content": query}
            ],
            max_tokens=425
        )
        answer = response['choices'][0]['message']['content'].strip()
        await use_webhook(message.channel, message=answer)

    await bot.process_commands(message)

@bot.event
async def on_disconnect():
    await send_to_channel(CHANNEL_ID, "Foxy has gone offline!")


# Run the bot
bot.run('REDACTED')

# @bot.command(name='status')
# sync def status(ctx):
    # await ctx.send('online and running until you put me up for adoption')
